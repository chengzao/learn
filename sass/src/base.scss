/*
 * @Author: czh
 * @Date: 2017-12-15 14:26:56
 * @Last Modified by: czh
 * @Last Modified time: 2017-12-15 16:03:31
 */

// 这种注释内容不会出现在生成的css文件中

/* 这种注释内容会出现在生成的css文件中 */

/* 1. 使用变量$ */

// 变量定义在css规则块内，那么该变量只能在此规则块内使用
$highlight-color: #f90;
$plain-font: "Myriad Pro", Myriad, "Helvetica Neue", Helvetica,
  "Liberation Sans", Arial, sans-serif;
html {
  font-family: $plain-font;
  color: $highlight-color;
}

.selected {
  border: 1px solid $highlight-color global;
}

/* 2. 变量名用中划线,下划线分隔都可以， 建议使用中划线 */

$highlight-border: 1px solid $highlight-color;
.selected {
  border: $highlight-border;
}

/* 3. 嵌套CSS 规则 */

#content {
  // 默认为子代选择器
  article {
    h1 {
      color: #333;
    }
    p {
      margin-bottom: 1.4em;
    }
  }
  aside {
    background-color: #eee;
  }
}

/* 4. 父选择器的标识符& */

article a {
  color: blue; // 链接符
  &:hover {
    color: red;
  }
}

#content aside {
  color: red; // 在父级加上一层范围标识
  body.ie & {
    color: green;
  }
}

/* 5. 群组选择器的嵌套 */

.container {
  h1,
  h2,
  h3 {
    margin-bottom: 0.8em;
  }
}

nav,
aside {
  a {
    color: blue;
  }
}

/* 6. 子组合选择器和同层组合选择器：>、+和~ */

article {
  ~ article {
    border-top: 1px dashed #ccc;
  }
  > section {
    background: #eee;
  }
  dl > {
    dt {
      color: #333;
    }
    dd {
      color: #555;
    }
  }
  nav + & {
    margin-top: 0;
  }
}

/* 7. 嵌套属性 */

nav {
  border: {
    style: solid;
    width: 1px;
    color: #ccc;
  }
}

/* 8. 导入局部的SASS文件：
sass局部文件的文件名以下划线开头，
sass就不会在编译时单独编译这个文件输出css */

/* 导入前设置变量的值 */

$fancybox-width: 500px;
@import "./_tmp";

/* 嵌套导入sass :局部文件会被直接插入到css规则内导入它的地方 */

.blue-theme {
  @import "./_blue-theme";
}

// 引入mixin and extend and function
@import "./_mixin";

// 引入控制指令 (Control Directives) , @media , #{}插值语句
@import "./_control";

$family: unquote("Droid+Sans");
@import url("http://fonts.googleapis.com/css?family=#{$family}");

/* 运算 Operations */
/* 数字运算: 支持数字的加减乘除、取整等运算 (+, -, *, /, %)，如果必要会在不同单位间转换值 */

p {
  font: 10px/8px; /* 纯 CSS，不是除法运算 */
  $width: 1000px;
  width: $width/2; /* 使用了变量，是除法运算 */
  width: round(1.5) / 2; /* 使用了函数，是除法运算 */
  height: (500px/2); /* 使用了圆括号，是除法运算 */
  margin-left: 5px + 8px/2px; /* 使用了加（+）号，是除法运算 */
}
// 在纯 CSS 中使用变量和 /， 你可以用 #{} 包住变量
p {
  $font-size: 12px;
  $line-height: 30px;
  font: #{$font-size}/#{$line-height};
}
/* 颜色值运算  */
p {
  color: #010203 + #040506;
}
//
p {
  color: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);
}

/* 颜色值的 alpha channel 可以通过 opacify 或 transparentize 两个函数进行调整*/
$translucent-red: rgba(255, 0, 0, 0.5);
p {
  color: opacify($translucent-red, 0.3);
  background-color: transparentize($translucent-red, 0.25);
}

$translucent-red: rgba(255, 0, 0, 0.5);
$green: #00ff00;
div {
  filter: progid:DXImageTransform.Microsoft.gradient(enabled='false', startColorstr='#{ie-hex-str($green)}', endColorstr='#{ie-hex-str($translucent-red)}');
}

/* 字符串运算 */

p {
  cursor: e + -resize;
}

p:before {
  content: "Foo " + Bar;
  font-family: sans- + "serif";
}

p:before {
  content: "I ate #{5 + 10} pies!";
}
/* @at-root */
@media print {
  .page {
    width: 8in;
    @at-root (without: media) {
      color: red;
    }
  }
}
